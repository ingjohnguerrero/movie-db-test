//
//  OnlineSearchModuleViewController.swift
//  Movie DB Test
//
//  Created by John Edwin Guerrero Ayala on 6/10/19.
//  Copyright (c) 2019 John Edwin Guerrero Ayala. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class OnlineSearchModuleViewController: UIViewController {

    @IBOutlet weak var activityIndicator: UIActivityIndicatorView!
    @IBOutlet weak var moviesTableView: UITableView!
    @IBOutlet weak var searchBar: UISearchBar!

    // MARK: - Public properties -

    var presenter: OnlineSearchModulePresenterInterface!

    // MARK: - Private properties -

    fileprivate var movieArray = [Movie]()

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        if presenter == nil {
            initPresenter()
        }
    }

    override func viewWillAppear(_ animated: Bool) {
        registerCustomPrototypes()
    }

    fileprivate func initPresenter() {
        _ = OnlineSearchModuleWireframe(viewControllerInstance: self)
    }

}

// MARK: - Extensions -

extension OnlineSearchModuleViewController: OnlineSearchModuleViewInterface {
    func startLoading() {
        activityIndicator?.startAnimating()
        moviesTableView.isHidden = true
        activityIndicator?.isHidden = false
    }

    func finishLoading() {
        activityIndicator?.stopAnimating()
        activityIndicator?.isHidden = true
    }

    func setMoviesList(movieArray: [Movie]) {
        self.movieArray = movieArray
        moviesTableView.isHidden = false
        moviesTableView.reloadData()
    }

    func showErrorView() {

    }

    func showEmptyView() {
        moviesTableView.isHidden = true
    }
}

extension OnlineSearchModuleViewController: UITableViewDelegate, UITableViewDataSource {

    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let detailWireframe = MovieDetailModuleWireframe(movieId: movieArray[indexPath.row].id)
        self.presentWireframe(detailWireframe)
    }

    func registerCustomPrototypes() {
        moviesTableView.register(UINib(nibName: "MovieResultTableViewCell", bundle: nil), forCellReuseIdentifier: "MovieResultTableViewCell")
    }

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return movieArray.count
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "MovieResultTableViewCell", for: indexPath) as! MovieResultTableViewCell
        cell.setData(movie: movieArray[indexPath.row])
        return cell
    }
}

extension OnlineSearchModuleViewController: UISearchBarDelegate {
    func searchBar(_ searchBar: UISearchBar, textDidChange searchText: String) {
        if(searchText.count > 3) {
            presenter.searchByTitle(term: searchText)
        }
    }
}
